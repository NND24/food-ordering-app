const axios = require("axios");
const {
  createDriver,
  By,
  until,
  Key,
} = require("../../../../config/webdriver_config");

async function test_1_8() {
  const driver = await createDriver();
  const keyword = "@#!!!";
  let result = {
    name: "1.8 Search k√Ω t·ª± ƒë·∫∑c bi·ªát",
    status: "Failed",
  };

  try {
    // üî∂ G·ªçi API ƒë·ªÉ l·∫•y d·ªØ li·ªáu tham chi·∫øu
    const apiRes = await axios.get("http://localhost:5000/api/v1/customerStore/", {
      params: { name: keyword },
    });

    if (!apiRes.data.success) {
      throw new Error(`API tr·∫£ v·ªÅ l·ªói: ${JSON.stringify(apiRes.data)}`);
    }

    const apiCount = apiRes.data.total;
    if (apiCount > 0) {
      throw new Error(`API tr·∫£ v·ªÅ ${apiCount} c·ª≠a h√†ng, k·ª≥ v·ªçng l√† 0`);
    }
    console.log("‚úÖ API kh√¥ng tr·∫£ v·ªÅ c·ª≠a h√†ng n√†o (ƒë√∫ng k·ª≥ v·ªçng)");

    // üîç T√¨m ki·∫øm tr√™n UI
    await driver.get("http://localhost:3000/home");

    const searchInputs = await driver.findElements(
      By.css('input[placeholder="T√¨m ki·∫øm qu√°n ƒÉn..."]')
    );
    let searchInput = null;
    for (const input of searchInputs) {
      if (await input.isDisplayed()) {
        searchInput = input;
        break;
      }
    }

    if (!searchInput) throw new Error("Kh√¥ng t√¨m th·∫•y √¥ t√¨m ki·∫øm hi·ªÉn th·ªã!");

    await searchInput.clear();
    await searchInput.sendKeys(keyword, Key.RETURN);
    console.log(`‚úÖ ƒê√£ nh·∫≠p t·ª´ kh√≥a: "${keyword}" v√† nh·∫•n Enter`);

    await driver.wait(until.urlContains("/search?"), 10000);
    await driver.wait(until.urlContains("name="), 10000);
    const currentUrl = await driver.getCurrentUrl();
    console.log("üåê ƒê√£ chuy·ªÉn sang URL:", currentUrl);

    await driver.sleep(3000); // ch·ªù render

    const allCards = await driver.findElements(
      By.css('[data-testid="store-card"]')
    );

    const storeCards = [];
    for (const card of allCards) {
      if (await card.isDisplayed()) {
        storeCards.push(card);
      }
    }

    console.log(`üì¶ S·ªë l∆∞·ª£ng c·ª≠a h√†ng hi·ªÉn th·ªã: ${storeCards.length}`);

    if (storeCards.length > 0) {
      throw new Error(`Kh√¥ng k·ª≥ v·ªçng c√≥ c·ª≠a h√†ng n√†o, nh∆∞ng th·∫•y ${storeCards.length}`);
    }

    console.log("‚úÖ UI kh√¥ng hi·ªÉn th·ªã c·ª≠a h√†ng n√†o, kh·ªõp v·ªõi k·∫øt qu·∫£ t·ª´ API.");
    result.status = "Passed";
  } catch (error) {
    console.error(`‚ùå ${result.name} Failed:`, error.message);
  } finally {
    await driver.quit();
  }

  return result;
}

module.exports = { test_1_8 };
